Index: socat/test.sh
===================================================================
--- socat.orig/test.sh	2010-05-22 09:10:41.000000000 +0000
+++ socat/test.sh	2010-06-07 09:49:16.000000000 +0000
@@ -11,6 +11,33 @@
 
 #set -vx
 
+# Get $2 consecutive free ports starting at $1.
+# The final result is set in PORT variable ( as in the testcase)
+# This would find a PORT number where, PORT, PORT+1,..PORT+$2-1 ports are
+# unused at the moment.
+# Again there is no guarantee that the ports returned would be free by the time
+# we actually start using it.
+
+function tc_get_n_free_ports()
+{
+	local start=$1
+	local index
+	local num=$2
+	while true; do
+		for ((index=0; index < $num; index=index+1)); do
+			netstat -a -n -t 2>/dev/null | grep -q ":$((index+start))"
+			[ $? -eq 0 ] && break
+		done
+		if [ $index -lt $num ]; then
+			start=$((start+index+1))
+		else
+			PORT=$start
+			#echo "Found $num ports from $start" >> /tmp/ports.log
+			return 0
+		fi
+	done
+}
+	
 val_t=0.1
 NUMCOND=true
 #NUMCOND="test \$N -gt 70"
@@ -49,8 +76,8 @@
 #SOCAT_EGD="egd=/dev/egd-pool"
 MISCDELAY=1
 [ -z "$SOCAT" ] && SOCAT="`which socat`"
-[ -z "$PROCAN" ] && PROCAN="./procan"
-[ -z "$FILAN" ] && FILAN="./filan"
+[ -z "$PROCAN" ] && PROCAN="`which procan`"
+[ -z "$FILAN" ] && FILAN="`which filan`"
 opts="$opt_t $OPTS"
 export SOCAT_OPTS="$opts"
 #debug="1"
@@ -193,38 +220,9 @@
 ECHO="echo $E"
 PRINTF="printf"
 
-case "$TERM" in
-vt100|vt320|linux|xterm|cons25|dtterm|aixterm|sun-color|xterm-color)
-	# there are different behaviours of printf (and echo)
-	# on some systems, echo behaves different than printf...
-	if [ $($PRINTF "\0101") = "A" ]; then
-		RED="\0033[31m"
-		GREEN="\0033[32m"
-		YELLOW="\0033[33m"
-#		if [ "$UNAME" = SunOS ]; then
-#		    NORMAL="\0033[30m"
-#		else
-		    NORMAL="\0033[39m"
-#		fi
-	else
-		RED="\033[31m"
-		GREEN="\033[32m"
-		YELLOW="\033[33m"
-#		if [ "$UNAME" = SunOS ]; then
-#		    NORMAL="\033[30m"
-#		else
-		    NORMAL="\033[39m"
-#		fi
-	fi
-	OK="${GREEN}OK${NORMAL}"
-	FAILED="${RED}FAILED${NORMAL}"
-	NO_RESULT="${YELLOW}NO RESULT${NORMAL}"
-	;;
-*)	OK="OK"
-	FAILED="FAILED"
-	NO_RESULT="NO RESULT"
-	;;
-esac
+OK="OK"
+FAILED="FAILED"
+NO_RESULT="NO RESULT"
 
 
 if [ -x /usr/xpg4/bin/id ]; then
@@ -243,10 +241,17 @@
     fi
     TMPDIR="$TMP"
 fi
-TD="$TMPDIR/$USER/$$"; td="$TD"
-rm -rf "$TD" || (echo "cannot rm $TD" >&2; exit 1)
-mkdir -p "$TD"
-#trap "rm -r $TD" 0 3
+
+if [ "$TC_TEMP_HOME" == "" ];
+then
+    TD="$TMPDIR/$USER/$$"; td="$TD"
+    rm -rf "$TD" || (echo "cannot rm $TD" >&2; exit 1)
+    mkdir -p "$TD"
+    #trap "rm -r $TD" 0 3
+else
+    TD=$TC_TEMP_HOME
+    td="$TD"
+fi
 
 echo "using temp directory $TD"
 
@@ -2200,6 +2205,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs pty >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}PTY not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testecho "$N" "$TEST" "" "exec:$CAT,pty,$PTYOPTS" "$opts"
@@ -2215,6 +2221,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs pty >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}PTY not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testecho "$N" "$TEST" "" "system:$CAT,pty,$PTYOPTS" "$opts"
@@ -2289,6 +2296,7 @@
 #TEST="$NAME: call to od via exec with pseudo terminal"
 #if ! testaddrs pty >/dev/null; then
 #    $PRINTF "test $F_n $TEST... ${YELLOW}PTY not available${NORMAL}\n" $N
+#    $PRINTF "SKIP\n"
 #    numCANT=$((numCANT+1))
 #else
 #testod "$N" "$TEST" "" "exec:$OD_C,pty,$PTYOPTS" "$opts"
@@ -2345,12 +2353,15 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testaddrs rawip) >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}RAWIP not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
     testecho "$N" "$TEST" "" "ip4:127.0.0.1:$IPPROTO" "$opts"
@@ -2365,12 +2376,15 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testaddrs rawip) >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}RAWIP not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
     testecho "$N" "$TEST" "" "ip:127.0.0.1:$IPPROTO" "$opts"
@@ -2385,12 +2399,15 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testaddrs rawip) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}RAWIP not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
     testecho "$N" "$TEST" "" "ip6:[::1]:$IPPROTO" "$opts"
@@ -2405,12 +2422,15 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testaddrs rawip) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}RAWIP not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
     testecho "$N" "$TEST" "" "ip:[::1]:$IPPROTO" "$opts"
@@ -2427,6 +2447,7 @@
 elif [ "$UNAME" != Linux ]; then
     #printf "test $F_n $TEST... ${YELLOW}only on Linux${NORMAL}\n" $N
     $PRINTF "test $F_n $TEST... ${YELLOW}only on Linux$NORMAL\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
     #ts="127.0.0.1:$tsl"
@@ -2444,6 +2465,7 @@
 TEST="$NAME: echo via self connection of UDP IPv4 socket"
 if [ "$UNAME" != Linux ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}only on Linux$NORMAL\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
     testecho "$N" "$TEST" "" "udp:127.100.0.1:$PORT,sp=$PORT,bind=127.100.0.1" "$opts"
@@ -2461,9 +2483,11 @@
 if ! eval $NUMCOND; then :;
 elif [ "$UNAME" != Linux ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}only on Linux${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs udp ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
     tf="$td/file$N"
@@ -2581,6 +2605,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs tcp ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -2625,9 +2650,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -2672,9 +2699,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -2718,12 +2747,15 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testoptions ipv6-v6only); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -2767,12 +2799,15 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testoptions ipv6-v6only); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -2813,12 +2848,15 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testoptions ipv6-v6only); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -2862,9 +2900,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -2908,12 +2948,15 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testoptions ipv6-v6only); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -2957,9 +3000,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -3004,12 +3049,15 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testoptions ipv6-v6only); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -3053,9 +3101,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -3145,6 +3195,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -3429,6 +3480,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs pty >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}PTY not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tt="$td/pty$N"
@@ -3639,12 +3691,15 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! type openssl >/dev/null 2>&1; then
     $PRINTF "test $F_n $TEST... ${YELLOW}openssl executable not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -3689,9 +3744,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs listen tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -3733,9 +3790,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs listen tcp ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -3780,9 +3839,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs listen tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -3825,9 +3886,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs listen tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -3870,9 +3933,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs listen tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -3908,54 +3973,55 @@
 PORT=$((PORT+1))
 N=$((N+1))
 
-NAME=OPENSSL_FIPS_BOTHAUTH
-case "$TESTS" in
-*%functions%*|*%openssl%*|*%fips%*|*%tcp%*|*%tcp4%*|*%ip4%*|*%$NAME%*)
-TEST="$NAME: OpenSSL+FIPS client and server authentication"
-if ! eval $NUMCOND; then :;
-elif ! testaddrs openssl >/dev/null; then
-    $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
-    numCANT=$((numCANT+1))
-elif ! testaddrs listen tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
-    $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv4 not available${NORMAL}\n" $N
-    numCANT=$((numCANT+1))
-elif ! testoptions fips >/dev/null; then
-    $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL/FIPS not available${NORMAL}\n" $N
-    numCANT=$((numCANT+1))
-else
-OPENSSL_FIPS=1 gentestcert testsrvfips
-OPENSSL_FIPS=1 gentestcert testclifips
-tf="$td/test$N.stdout"
-te="$td/test$N.stderr"
-tdiff="$td/test$N.diff"
-da="test$N $(date) $RANDOM"
-CMD2="$SOCAT $opts OPENSSL-LISTEN:$PORT,reuseaddr,fips,$SOCAT_EGD,cert=testsrvfips.crt,key=testsrvfips.key,cafile=testclifips.crt pipe"
-CMD="$SOCAT $opts - openssl:$LOCALHOST:$PORT,fips,verify=1,cert=testclifips.crt,key=testclifips.key,cafile=testsrvfips.crt,$SOCAT_EGD"
-printf "test $F_n $TEST... " $N
-eval "$CMD2 2>\"${te}1\" &"
-pid=$!	# background process id
-waittcp4port $PORT
-echo "$da" |$CMD >$tf 2>"${te}2"
-if ! echo "$da" |diff - "$tf" >"$tdiff"; then
-    $PRINTF "$FAILED: $SOCAT:\n"
-    echo "$CMD2 &"
-    echo "$CMD"
-    cat "${te}1"
-    cat "${te}2"
-    cat "$tdiff"
-    numFAIL=$((numFAIL+1))
-else
-   $PRINTF "$OK\n"
-   if [ -n "$debug" ]; then cat "${te}1" "${te}2"; fi
-   numOK=$((numOK+1))
-fi
-kill $pid 2>/dev/null
-wait
-fi ;; # NUMCOND, feats
-esac
-PORT=$((PORT+1))
-N=$((N+1))
-
+# Disable FIPS test. Not supported
+#NAME=OPENSSL_FIPS_BOTHAUTH
+#case "$TESTS" in
+#*%functions%*|*%openssl%*|*%fips%*|*%tcp%*|*%tcp4%*|*%ip4%*|*%$NAME%*)
+#TEST="$NAME: OpenSSL+FIPS client and server authentication"
+#if ! eval $NUMCOND; then :;
+#elif ! testaddrs openssl >/dev/null; then
+#    $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+#    numCANT=$((numCANT+1))
+#elif ! testaddrs listen tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
+#    $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv4 not available${NORMAL}\n" $N
+#    numCANT=$((numCANT+1))
+#elif ! testoptions fips >/dev/null; then
+#    $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL/FIPS not available${NORMAL}\n" $N
+#    numCANT=$((numCANT+1))
+#else
+#OPENSSL_FIPS=1 gentestcert testsrvfips
+#OPENSSL_FIPS=1 gentestcert testclifips
+#tf="$td/test$N.stdout"
+#te="$td/test$N.stderr"
+#tdiff="$td/test$N.diff"
+#da="test$N $(date) $RANDOM"
+#CMD2="$SOCAT $opts OPENSSL-LISTEN:$PORT,reuseaddr,fips,$SOCAT_EGD,cert=testsrvfips.crt,key=testsrvfips.key,cafile=testclifips.crt pipe"
+#CMD="$SOCAT $opts - openssl:$LOCALHOST:$PORT,fips,verify=1,cert=testclifips.crt,key=testclifips.key,cafile=testsrvfips.crt,$SOCAT_EGD"
+#printf "test $F_n $TEST... " $N
+#eval "$CMD2 2>\"${te}1\" &"
+#pid=$!	# background process id
+#waittcp4port $PORT
+#echo "$da" |$CMD >$tf 2>"${te}2"
+#if ! echo "$da" |diff - "$tf" >"$tdiff"; then
+#    $PRINTF "$FAILED: $SOCAT:\n"
+#    echo "$CMD2 &"
+#    echo "$CMD"
+#    cat "${te}1"
+#    cat "${te}2"
+#    cat "$tdiff"
+#    numFAIL=$((numFAIL+1))
+#else
+#   $PRINTF "$OK\n"
+#   if [ -n "$debug" ]; then cat "${te}1" "${te}2"; fi
+#   numOK=$((numOK+1))
+#fi
+#kill $pid 2>/dev/null
+#wait
+#fi ;; # NUMCOND, feats
+#esac
+#PORT=$((PORT+1))
+#N=$((N+1))
+#
 
 NAME=SOCKS4CONNECT_TCP4
 case "$TESTS" in
@@ -3964,9 +4030,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs socks4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}SOCKS4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs listen tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -4008,9 +4076,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs socks4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}SOCKS4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs listen tcp ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -4053,9 +4123,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs socks4a >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}SOCKS4A not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs listen tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -4097,9 +4169,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs socks4a >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}SOCKS4A not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs listen tcp ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -4142,9 +4216,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs proxy >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}PROXY not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs listen tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ts="$td/test$N.sh"
@@ -4187,9 +4263,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs proxy >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}PROXY not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! testaddrs listen tcp ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ts="$td/test$N.sh"
@@ -4417,6 +4495,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs proxy >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}PROXY not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ts="$td/test$N.sh"
@@ -4477,6 +4556,7 @@
 	numFAIL=$((numFAIL+1))
     else
 	$PRINTF "${YELLOW}failed (don't care)${NORMAL}\n"
+    $PRINTF "SKIP\n"
 	numCANT=$((numCANT+1))
     fi
 fi
@@ -4508,6 +4588,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs pty >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}PTY not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testecho "$N" "$TEST" "-!!exec:cat,pty,raw" "" "$opts" 1
@@ -4538,6 +4619,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs pty >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}PTY not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testecho "$N" "$TEST" "exec:cat,pty,raw!!-" "" "$opts" $MISCDELAY
@@ -4552,6 +4634,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs pty >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}PTY not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testecho "$N" "$TEST" "exec:cat,pty,raw!!-" "" "$opts"
@@ -4568,6 +4651,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs readline pty); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$(echo $feat| tr 'a-z' 'A-Z') not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 SAVETERM="$TERM"; TERM=	# 'cause konsole might print controls even in raw
@@ -4713,6 +4797,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs openssl proxy); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$(echo $feat |tr 'a-z' 'A-Z') not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -4792,12 +4877,14 @@
 PORT=$((RANDOM+16184))
 #!
 NAME=INTRANETRIPPER
+tc_get_n_free_ports $PORT 5
 case "$TESTS" in
 *%functions%*|*%$NAME%*)
 TEST="$NAME: gender changer via SSL through HTTP proxy, daemons"
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs openssl proxy); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$(echo $feat| tr 'a-z' 'A-Z') not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -4930,6 +5017,7 @@
 	$PRINTF "$NO_RESULT (ph.1 server not working):\n"
 	echo "$SOCAT $opts \"$arg1,$secopt0\" echo &"
 	cat "${te}1"
+    $PRINTF "SKIP\n"
 	numCANT=$((numCANT+1))
 	wait; return
     fi
@@ -4944,6 +5032,7 @@
 	cat "${te}1"
 	echo "$SOCAT $opts - \"$arg2\""
 	cat "${te}2"
+    $PRINTF "SKIP\n"
 	numCANT=$((numCANT+1))
 	wait; return
     elif echo "$da" |diff - "$tf" >"$tdiff1" 2>&1; then
@@ -4955,6 +5044,7 @@
 	echo "$SOCAT $opts - $arg2"
 	cat "${te}2"
 	cat "$tdiff1"
+    $PRINTF "SKIP\n"
 	numCANT=$((numCANT+1))
 	wait; return
     fi
@@ -4962,6 +5052,7 @@
     # then: with security
     if [ "$port" ] && ! wait${proto}${ipvers}port $port 0; then
 	$PRINTF "$NO_RESULT (ph.1 port remains in use)\n"
+    $PRINTF "SKIP\n"
 	numCANT=$((numCANT+1))
 	wait; return
     fi
@@ -4983,6 +5074,7 @@
 	wait
 	echo "$CMD3"
 	cat "${te}3"
+    $PRINTF "SKIP\n"
 	numCANT=$((numCANT+1))
 	return
     fi
@@ -5009,6 +5101,7 @@
 	    cat "${te}3"
 	    echo "$SOCAT $opts - $arg2"
 	    cat "${te}4"
+    $PRINTF "SKIP\n"
 	    numCANT=$((numCANT+1)) ;;
 	X0) $PRINTF "$NO_RESULT (ph.2 diff failed): diff:\n"
 	    echo "$SOCAT $opts $arg echo"
@@ -5016,6 +5109,7 @@
 	    echo "$SOCAT $opts - $arg2"
 	    cat "${te}4"
 	    cat "$tdiff2"
+    $PRINTF "SKIP\n"
 	    numCANT=$((numCANT+1)) ;;
 	X1) $PRINTF "$FAILED: SECURITY BROKEN\n"
 	    echo "$SOCAT $opts $arg echo"
@@ -5050,6 +5144,7 @@
 elif [ -z "$SECONDADDR" ]; then
     # we need access to a second addresses
     $PRINTF "test $F_n $TEST... ${YELLOW}need a second IPv4 address${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testserversec "$N" "$TEST" "$opts -s" "tcp4-l:$PORT,reuseaddr,fork,retry=1" "" "range=$SECONDADDR/32" "tcp4:127.0.0.1:$PORT" 4 tcp $PORT 0
@@ -5066,6 +5161,7 @@
 elif [ -z "$SECONDADDR" ]; then
     # we need access to a second addresses
     $PRINTF "test $F_n $TEST... ${YELLOW}need a second IPv4 address${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testserversec "$N" "$TEST" "$opts -s" "tcp4-l:$PORT,reuseaddr,fork,retry=1" "" "range=$SECONDADDR:255.255.255.255" "tcp4:127.0.0.1:$PORT" 4 tcp $PORT 0
@@ -5083,6 +5179,7 @@
 elif [ "$UNAME" != Linux ]; then
     # we need access to more loopback addresses
     $PRINTF "test $F_n $TEST... ${YELLOW}only on Linux${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testserversec "$N" "$TEST" "$opts -s" "tcp4-l:$PORT,reuseaddr,fork,retry=1" "" "range=127.0.0.0:255.255.0.0" "tcp4:127.1.0.0:$PORT" 4 tcp $PORT 0
@@ -5121,6 +5218,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp ip4 libwrap) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ha="$td/hosts.allow"
@@ -5140,6 +5238,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp ip4 libwrap) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ha="$td/hosts.allow"
@@ -5160,6 +5259,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testserversec "$N" "$TEST" "$opts -s" "tcp6-l:$PORT,reuseaddr,fork,retry=1" "" "range=[::2/128]" "tcp6:[::1]:$PORT" 6 tcp $PORT 0
@@ -5175,6 +5275,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testserversec "$N" "$TEST" "$opts -s" "tcp6-l:$PORT,reuseaddr,fork,retry=1" "" "sp=$PORT" "tcp6:[::1]:$PORT" 6 tcp $PORT 0
@@ -5190,6 +5291,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testserversec "$N" "$TEST" "$opts -s" "tcp6-l:$PORT,reuseaddr,fork,retry=1" "" "lowport" "tcp6:[::1]:$PORT" 6 tcp $PORT 0
@@ -5205,6 +5307,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp ip6 libwrap) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ha="$td/hosts.allow"
@@ -5259,6 +5362,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip4 libwrap) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ha="$td/hosts.allow"
@@ -5279,6 +5383,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 #testserversec "$N" "$TEST" "$opts -s" "udp6-l:$PORT,reuseaddr,fork" "" "range=[::2/128]" "udp6:[::1]:$PORT" 6 udp $PORT 0
@@ -5295,6 +5400,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testserversec "$N" "$TEST" "$opts -s" "udp6-l:$PORT,reuseaddr" "" "sp=$PORT" "udp6:[::1]:$PORT" 6 udp $PORT 0
@@ -5310,6 +5416,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testserversec "$N" "$TEST" "$opts -s" "udp6-l:$PORT,reuseaddr" "" "lowport" "udp6:[::1]:$PORT" 6 udp $PORT 0
@@ -5325,6 +5432,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp ip6 libwrap) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ha="$td/hosts.allow"
@@ -5345,6 +5453,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -5361,6 +5470,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -5377,6 +5487,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -5393,6 +5504,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4 tcp libwrap openssl); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -5413,6 +5525,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -5430,6 +5543,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -5448,9 +5562,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testaddrs tcp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -5467,9 +5583,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testaddrs tcp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -5486,9 +5604,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testaddrs tcp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -5505,6 +5625,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip6 tcp libwrap openssl) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 gentestcert testsrv
@@ -5518,31 +5639,31 @@
 PORT=$((PORT+1))
 N=$((N+1))
 
-
-NAME=OPENSSL_FIPS_SECURITY
-case "$TESTS" in
-*%functions%*|*%security%*|*%openssl%*|*%fips%*|*%tcp%*|*%tcp4%*|*%ip4%*|*%$NAME%*)
-TEST="$NAME: OpenSSL restrictions by FIPS"
-if ! eval $NUMCOND; then :;
-elif ! testaddrs openssl >/dev/null; then
-    $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
-    numCANT=$((numCANT+1))
-elif ! testaddrs listen tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
-    $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv4 not available${NORMAL}\n" $N
-    numCANT=$((numCANT+1))
-elif ! testoptions fips >/dev/null; then
-    $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL/FIPS not available${NORMAL}\n" $N
-    numCANT=$((numCANT+1))
-else
-gentestcert testsrv
-gentestcert testcli
-# openssl client accepts a "normal" certificate only when not in fips mode
-testserversec "$N" "$TEST" "$opts -s" "ssl:$LOCALHOST:$PORT,fork,retry=2,verify,cafile=testsrv.crt" "" "fips" "ssl-l:$PORT,pf=ip4,reuseaddr,cert=testsrv.crt,key=testsrv.key" 4 tcp "" -1
-fi ;; # testaddrs, NUMCOND
-esac
-PORT=$((PORT+1))
-N=$((N+1))
-
+# Disable FIPS test
+#NAME=OPENSSL_FIPS_SECURITY
+#case "$TESTS" in
+#*%functions%*|*%security%*|*%openssl%*|*%fips%*|*%tcp%*|*%tcp4%*|*%ip4%*|*%$NAME%*)
+#TEST="$NAME: OpenSSL restrictions by FIPS"
+#if ! eval $NUMCOND; then :;
+#elif ! testaddrs openssl >/dev/null; then
+#    $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+#    numCANT=$((numCANT+1))
+#elif ! testaddrs listen tcp ip4 >/dev/null || ! runsip4 >/dev/null; then
+#    $PRINTF "test $F_n $TEST... ${YELLOW}TCP/IPv4 not available${NORMAL}\n" $N
+#    numCANT=$((numCANT+1))
+#elif ! testoptions fips >/dev/null; then
+#    $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL/FIPS not available${NORMAL}\n" $N
+#    numCANT=$((numCANT+1))
+#else
+#gentestcert testsrv
+#gentestcert testcli
+## openssl client accepts a "normal" certificate only when not in fips mode
+#testserversec "$N" "$TEST" "$opts -s" "ssl:$LOCALHOST:$PORT,fork,retry=2,verify,cafile=testsrv.crt" "" "fips" "ssl-l:$PORT,pf=ip4,reuseaddr,cert=testsrv.crt,key=testsrv.key" 4 tcp "" -1
+#fi ;; # testaddrs, NUMCOND
+#esac
+#PORT=$((PORT+1))
+#N=$((N+1))
+#
 
 NAME=UNIEXECEOF
 case "$TESTS" in
@@ -5654,6 +5775,7 @@
     cat "$te3"
     cat "$te4"
     cat "$tdiff"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 fi
 }
@@ -5666,9 +5788,12 @@
 if ! eval $NUMCOND; then :; else
 if ! feat=$(testaddrs pty); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$(echo $feat| tr 'a-z' 'A-Z') not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testoptions "$PTYTYPE" pty-wait-slave); then
     $PRINTF "test $F_n $TEST... ${YELLOW}option $(echo $feat| tr 'a-z' 'A-Z') not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
    testptywaitslave "$N" "$TEST" "$PTYTYPE" "$opts"
@@ -5685,9 +5810,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs pty); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$(echo $feat| tr 'a-z' 'A-Z') not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testoptions "$PTYTYPE" pty-wait-slave); then
     $PRINTF "test $F_n $TEST... ${YELLOW}option $(echo $feat| tr 'a-z' 'A-Z') not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
    testptywaitslave "$N" "$TEST" "$PTYTYPE" "$opts"
@@ -5703,9 +5830,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$(echo $feat| tr 'a-z' 'A-Z') not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! feat=$(testoptions connect-timeout); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$(echo $feat| tr 'a-z' 'A-Z') not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 # we need a hanging connection attempt, guess an address for this
@@ -5726,7 +5855,11 @@
 sleep 2
 if ! kill $pid1 2>"$tk1"; then
     $PRINTF "${YELLOW}does not hang${NORMAL}\n"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
+    cat $te1
+    cat $tk1
+    $PRINTF "SKIP\n"
 else
 # second, set connect-timeout and see if socat exits before kill
 $SOCAT $opts - tcp:$HANGIP:1,connect-timeout=1.0 >"$te2" 2>&1 </dev/null &
@@ -5756,7 +5889,9 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs openssl >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}OPENSSL not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
+    $PRINTF "SKIP\n"
 else
 SRVCERT=testsrvdsa
 gentestdsacert $SRVCERT
@@ -5819,6 +5954,7 @@
 elif ! feat=$(testaddrs pty); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$(echo $feat |tr a-z A-Z) not available${NORMAL}\n" $N
     numCANT=$((numCANT+1))
+    $PRINTF "SKIP\n"
 else
 SIG="$(signum $signam)"
 te="$td/test$N.stderr"
@@ -5863,6 +5999,7 @@
 elif false; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$(echo $feat| tr 'a-z' 'A-Z') not available${NORMAL}\n" $N
     numCANT=$((numCANT+1))
+    $PRINTF "SKIP\n"
 else
 tr="$td/test$N.ref"
 ti="$td/test$N.in"
@@ -5924,10 +6061,12 @@
     echo "$CLI"
     cat "${te}s" "${te}1"
     numCANT=$((numCANT+1))
+    $PRINTF "SKIP\n"
 elif ! echo "$da1" |diff - "${tf}1" >"$tdiff"; then
     kill "$pids" 2>/dev/null
     $PRINTF "$NO_RESULT (first conn failed); diff:\n"
     cat "$tdiff"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 echo "$da2" |eval "$CLI" >"${tf}2" 2>"${te}2"
@@ -6142,6 +6281,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs tcp ip6 >/dev/null || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -6240,6 +6380,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -6286,6 +6427,7 @@
 if ! eval $NUMCOND; then :;
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -6335,9 +6477,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip6 rawip) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -6474,6 +6618,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -6522,6 +6667,7 @@
 if ! eval $NUMCOND; then :;
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -6570,9 +6716,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip6 rawip) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -6663,6 +6811,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip4) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testserversec "$N" "$TEST" "$opts -s" "udp4-recvfrom:$PORT,reuseaddr" "" "sp=$PORT" "udp4-sendto:127.0.0.1:$PORT" 4 udp $PORT 0
@@ -6678,6 +6827,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip4) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testserversec "$N" "$TEST" "$opts -s" "udp4-recvfrom:$PORT,reuseaddr" "" "lowport" "udp4-sendto:127.0.0.1:$PORT" 4 udp $PORT 0
@@ -6705,6 +6855,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4 udp libwrap) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ha="$td/hosts.allow"
@@ -6726,6 +6877,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip4) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 PORT1=$PORT; PORT=$((PORT+1))
@@ -6746,6 +6898,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip4) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 PORT1=$PORT; PORT=$((PORT+1))
@@ -6765,6 +6918,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip4) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 PORT1=$PORT; PORT=$((PORT+1))
@@ -6784,6 +6938,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip4 libwrap) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 PORT1=$PORT; PORT=$((PORT+1))
@@ -6808,6 +6963,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testserversec "$N" "$TEST" "$opts -s" "udp6-recvfrom:$PORT,reuseaddr" "" "sp=$PORT" "udp6-sendto:[::1]:$PORT" 6 udp $PORT 0
@@ -6823,6 +6979,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 testserversec "$N" "$TEST" "$opts -s" "udp6-recvfrom:$PORT,reuseaddr" "" "lowport" "udp6-sendto:[::1]:$PORT" 6 udp $PORT 0
@@ -6838,6 +6995,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}TCP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 #testserversec "$N" "$TEST" "$opts -s" "udp6-recvfrom:$PORT,reuseaddr,fork" "" "range=[::2/128]" "udp6-sendto:[::1]:$PORT" 6 udp $PORT 0
@@ -6854,6 +7012,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip6 libwrap) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ha="$td/hosts.allow"
@@ -6874,6 +7033,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 PORT1=$PORT; PORT=$((PORT+1))
@@ -6894,6 +7054,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 PORT1=$PORT; PORT=$((PORT+1))
@@ -6913,6 +7074,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 PORT1=$PORT; PORT=$((PORT+1))
@@ -6932,6 +7094,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip6 libwrap) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ha="$td/hosts.allow"
@@ -6956,9 +7119,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4 rawip) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 #testserversec "$N" "$TEST" "$opts -s" "ip4-recvfrom:$PROTO,reuseaddr,fork" "" "range=$SECONDADDR/32" "ip4-sendto:127.0.0.1:$PROTO" 4 ip $PROTO 0
@@ -6976,9 +7141,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4 rawip libwrap) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ha="$td/hosts.allow"
@@ -7002,9 +7169,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4 rawip) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}IP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 PROTO1=$PROTO; PROTO=$((PROTO+1))
@@ -7026,9 +7195,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4 rawip libwrap) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 PROTO1=$PROTO; PROTO=$((PROTO+1))
@@ -7053,9 +7224,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip6 rawip) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 #testserversec "$N" "$TEST" "$opts -s" "ip6-recvfrom:$PROTO,reuseaddr,fork" "" "range=[::2/128]" "ip6-sendto:[::1]:$PROTO" 6 ip $PROTO 0
@@ -7073,9 +7246,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip6 rawip libwrap) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ha="$td/hosts.allow"
@@ -7098,9 +7273,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip6 rawip) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}raw IP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 PROTO1=$PROTO; PROTO=$((PROTO+1))
@@ -7120,9 +7297,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip6 rawip libwrap) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 PROTO1=$PROTO; PROTO=$((PROTO+1))
@@ -7151,6 +7330,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testoptions o-noatime >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}o-noatime not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.file"
@@ -7201,6 +7381,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testoptions o-noatime >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}o-noatime not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.file"
@@ -7252,6 +7433,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testoptions ext2-noatime >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}ext2-noatime not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ts="$td/test$N.socket"
@@ -7267,6 +7449,7 @@
 $CMD0 2>"${te}0"
 if [ $? -ne 0 ]; then
     $PRINTF "${YELLOW} cannot test${NORMAL}\n"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 # generate a file with noatime, len >= 1
@@ -7275,6 +7458,7 @@
     $PRINTF "${YELLOW}impotent file system?${NORMAL}\n"
     echo "$CMD"
     cat "$te"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 sleep 1
@@ -7310,6 +7494,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testoptions cool-write >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}option cool-write not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 #set -vx
@@ -7358,6 +7543,7 @@
 if ! eval $NUMCOND; then :;
 elif ! testoptions cool-write >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}option cool-write not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 #set -vx
@@ -7493,6 +7679,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs udp ip6) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}UDP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -7540,6 +7727,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp ip4 libwrap) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -7585,6 +7773,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs tcp ip6 libwrap) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -7632,6 +7821,7 @@
 if ! eval $NUMCOND; then :;
 elif [ -z "$BCADDR" ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}dont know a broadcast address${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -7688,9 +7878,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4 rawip) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}raw IP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ -z "$BCADDR" ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}dont know a broadcast address${NORMAL}\n" $N
@@ -7761,6 +7953,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4 udp) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -7807,9 +8000,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4 rawip) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -7859,6 +8054,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip6 udp) || ! runsip6 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -7954,9 +8150,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4 rawip) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -8013,9 +8211,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4 tun) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -8068,9 +8268,11 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs ip4 tun interface) || ! runsip4 >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -8120,6 +8322,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs abstract-unixsocket); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ts="$td/test$N.socket"
@@ -8173,6 +8376,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs abstract-unixsocket); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -8220,6 +8424,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs abstract-unixsocket); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$feat not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ts="$td/test$N.socket"
@@ -8280,6 +8485,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs openssl) >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$(echo $feat| tr 'a-z' 'A-Z') not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.out"
@@ -8332,6 +8538,7 @@
 if ! eval $NUMCOND; then :;
 elif false; then
     $PRINTF "test $F_n $TEST... ${YELLOW}$(echo $feat| tr 'a-z' 'A-Z') not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tr="$td/test$N.ref"
@@ -8487,6 +8694,7 @@
 FOPEN_MAX=$($PROCAN -c 2>/dev/null |grep '^#define[ ][ ]*FOPEN_MAX' |awk '{print($3);}')
 if [ -z "$FOPEN_MAX" ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}could not determine FOPEN_MAX${NORMAL}\n" "$N"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 OPEN_FILES=$FOPEN_MAX	# more than the highest FOPEN_MAX
@@ -8536,9 +8744,11 @@
 kill $pid1 2>/dev/null; wait
 if [ $rc2 -ne 0 ]; then
     $PRINTF "$NO_RESULT (client failed)\n"	# already handled in test UDP4STREAM
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! echo "$da" |diff - "$tf" >"$tdiff"; then
     $PRINTF "$NO_RESULT (diff failed)\n"	# already handled in test UDP4STREAM
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif $(isdefunct "$l"); then
     $PRINTF "$FAILED: $SOCAT:\n"
@@ -8588,9 +8798,11 @@
 kill $pid1 2>/dev/null; wait
 if [ $rc2 -ne 0 ]; then
     $PRINTF "$NO_RESULT\n"	# already handled in test UDP4DGRAM
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! echo "$da" |diff - "$tf" >"$tdiff"; then
     $PRINTF "$NO_RESULT\n"	# already handled in test UDP4DGRAM
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif $(isdefunct "$l"); then
     $PRINTF "$FAILED: $SOCAT:\n"
@@ -8622,6 +8834,7 @@
 if ! eval $NUMCOND; then :;
 elif [ $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -8695,6 +8908,7 @@
 kill $pid1 2>/dev/null; wait
 if [ $rc2b -ne 0 ]; then
     $PRINTF "$NO_RESULT\n"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! echo "$da" |diff - "$tf" >"$tdiff"; then
     $PRINTF "$FAILED: $SOCAT:\n"
@@ -8785,9 +8999,11 @@
 kill $pid1 2>/dev/null; wait
 if [ $rc1 -ne 0 ]; then
     $PRINTF "$NO_RESULT\n"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $nsocks -eq 0 ]; then
     $PRINTF "$NO_RESULT\n"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $nsocks -ne 1 ]; then
     $PRINTF "$FAILED ($nsocks listening sockets)\n"
@@ -8931,6 +9147,7 @@
 #elif [[ "$PF" == "#*" ]]; then :
 elif [ "$ROOT" = root -a $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -8975,13 +9192,17 @@
     echo "$CMD1"
     grep " $LEVELS " "${te}0"
     grep " $LEVELS " "${te}1"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif ! grep "ancillary message: $SCM_TYPE: $SCM_NAME=$SCM_VALUE" ${te}0 >/dev/null; then
     $PRINTF "$FAILED\n"
     echo "$CMD0 &"
+    cat ${te}0 ${tf}
     echo "$CMD1"
+    cat ${te}1
     grep " $LEVELS " "${te}0"
     grep " $LEVELS " "${te}1"
+    echo "expected : ancillary message: $SCM_TYPE: $SCM_NAME=$SCM_VALUE "
     numFAIL=$((numFAIL+1))
 else
     $PRINTF "$OK\n"
@@ -8993,6 +9214,7 @@
 set +vx
 else # option is not supported
     $PRINTF "${YELLOW}$SCM_RECV not available${NORMAL}\n"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 fi # option is not supported
 fi # NUMCOND, root, feats
@@ -9002,32 +9224,28 @@
 #
 done <<<"
 IP4  UDP4 127.0.0.1 PORT  ip-options=x01000000 ip-recvopts       IP_OPTIONS     options   user x01000000
-IP4  UDP4 127.0.0.1 PORT  ,                    so-timestamp      SCM_TIMESTAMP  timestamp user $(date '+%a %b %e %H:%M:.. %Y')
+IP4  UDP4 127.0.0.1 PORT  ,                    so-timestamp      SCM_TIMESTAMP  timestamp user ... ... ..\\\? ..:..:.. .... 
 IP4  UDP4 127.0.0.1 PORT  ip-ttl=53            ip-recvttl        IP_TTL         ttl       user 53
 IP4  UDP4 127.0.0.1 PORT  ip-tos=7             ip-recvtos        IP_TOS         tos       user 7
 IP4  UDP4 127.0.0.1 PORT  ,                    ip-pktinfo        IP_PKTINFO     locaddr   user 127.0.0.1
 IP4  UDP4 127.0.0.1 PORT  ,                    ip-pktinfo        IP_PKTINFO     dstaddr   user 127.0.0.1
 IP4  UDP4 127.0.0.1 PORT  ,                    ip-pktinfo        IP_PKTINFO     if        user lo
-IP4  UDP4 127.0.0.1 PORT  ,                    ip-recvif         IP_RECVIF      if        user lo0
-IP4  UDP4 127.0.0.1 PORT  ,                    ip-recvdstaddr    IP_RECVDSTADDR dstaddr   user 127.0.0.1
 IP4  IP4  127.0.0.1 PROTO ip-options=x01000000 ip-recvopts       IP_OPTIONS     options   root x01000000
-IP4  IP4  127.0.0.1 PROTO ,                    so-timestamp      SCM_TIMESTAMP  timestamp root $(date '+%a %b %e %H:%M:.. %Y')
+IP4  IP4  127.0.0.1 PROTO ,                    so-timestamp      SCM_TIMESTAMP  timestamp root ... ... ..\\\? ..:..:.. ....
 IP4  IP4  127.0.0.1 PROTO ip-ttl=53            ip-recvttl        IP_TTL         ttl       root 53
 IP4  IP4  127.0.0.1 PROTO ip-tos=7             ip-recvtos        IP_TOS         tos       root 7
 IP4  IP4  127.0.0.1 PROTO ,                    ip-pktinfo        IP_PKTINFO     locaddr   root 127.0.0.1
 IP4  IP4  127.0.0.1 PROTO ,                    ip-pktinfo        IP_PKTINFO     dstaddr   root 127.0.0.1
 IP4  IP4  127.0.0.1 PROTO ,                    ip-pktinfo        IP_PKTINFO     if        root lo
-IP4  IP4  127.0.0.1 PROTO ,                    ip-recvif         IP_RECVIF      if        root lo0
-IP4  IP4  127.0.0.1 PROTO ,                    ip-recvdstaddr    IP_RECVDSTADDR dstaddr   root 127.0.0.1
-IP6  UDP6 [::1]     PORT  ,                    so-timestamp      SCM_TIMESTAMP  timestamp user $(date '+%a %b %e %H:%M:.. %Y')
+IP6  UDP6 [::1]     PORT  ,                    so-timestamp      SCM_TIMESTAMP  timestamp user ... ... ..\\\? ..:..:.. ....
 IP6  UDP6 [::1]     PORT  ,                    ipv6-recvpktinfo  IPV6_PKTINFO   dstaddr   user [[]0000:0000:0000:0000:0000:0000:0000:0001[]]
 IP6  UDP6 [::1]     PORT  ipv6-unicast-hops=35 ipv6-recvhoplimit IPV6_HOPLIMIT  hoplimit  user 35
-IP6  UDP6 [::1]     PORT  ipv6-tclass=0xaa     ipv6-recvtclass   IPV6_TCLASS    tclass    user xaa000000
-IP6  IP6  [::1]     PROTO ,                    so-timestamp      SCM_TIMESTAMP  timestamp root $(date '+%a %b %e %H:%M:.. %Y')
+IP6  UDP6 [::1]     PORT  ipv6-tclass=0xaa     ipv6-recvtclass   IPV6_TCLASS    tclass    user 0xaa
+IP6  IP6  [::1]     PROTO ,                    so-timestamp      SCM_TIMESTAMP  timestamp root ... ... ..\\\? ..:..:.. ....
 IP6  IP6  [::1]     PROTO ,                    ipv6-recvpktinfo  IPV6_PKTINFO   dstaddr   root [[]0000:0000:0000:0000:0000:0000:0000:0001[]]
 IP6  IP6  [::1]     PROTO ipv6-unicast-hops=35 ipv6-recvhoplimit IPV6_HOPLIMIT  hoplimit  root 35
-IP6  IP6  [::1]     PROTO ipv6-tclass=0xaa     ipv6-recvtclass   IPV6_TCLASS    tclass    root xaa000000
-#UNIX UNIX $td/test\$N.server - ,               so-timestamp      SCM_TIMESTAMP  timestamp user $(date '+%a %b %e %H:%M:.. %Y')
+IP6  IP6  [::1]     PROTO ipv6-tclass=0xaa     ipv6-recvtclass   IPV6_TCLASS    tclass    root 0xaa
+#UNIX UNIX $td/test\$N.server - ,               so-timestamp      SCM_TIMESTAMP  timestamp user $(date '+%a %b %e %H:..:.. ')
 "
 # this one fails, appearently due to a Linux weakness:
 # UNIX so-timestamp
@@ -9051,6 +9269,7 @@
 if ! eval $NUMCOND; then :;
 elif ! feat=$(testaddrs $FEAT); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$(echo $feat |tr a-z A-Z) not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -9087,6 +9306,7 @@
     cat "${te}0"
     echo "$CMD1"
     cat "${te}1"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ "$(grep SOCAT_SOCKADDR "${tf}" |sed -e 's/^[^=]*=//' |sed -e "s/[\"']//g")" = "$TEST_SOCKADDR" -a \
     "$(grep SOCAT_PEERADDR "${tf}" |sed -e 's/^[^=]*=//' -e "s/[\"']//g")" = "$TEST_PEERADDR" -a \
@@ -9119,7 +9339,7 @@
 TCP4  TCP  $LOCALHOST                                $SECONDADDR                               $PORT       $((PORT+1))
 TCP6  IP6  [0000:0000:0000:0000:0000:0000:0000:0001] [0000:0000:0000:0000:0000:0000:0000:0001] $((PORT+2)) $((PORT+3))
 UDP6  IP6  [0000:0000:0000:0000:0000:0000:0000:0001] [0000:0000:0000:0000:0000:0000:0000:0001] $((PORT+6)) $((PORT+7))
-SCTP4 SCTP $LOCALHOST                                $SECONDADDR                               $((PORT+8)) $((PORT+9))
+SCTP4 SCTP $LOCALHOST                                $LOCALHOST                                $((PORT+8)) $((PORT+9))
 SCTP6 SCTP [0000:0000:0000:0000:0000:0000:0000:0001] [0000:0000:0000:0000:0000:0000:0000:0001] $((PORT+10)) $((PORT+11))
 UNIX  UNIX $td/test\$N.server                        $td/test\$N.client                        ,           ,
 "
@@ -9146,6 +9366,7 @@
 if ! eval $NUMCOND; then :;
 elif [ "$ROOT" = root -a $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -9185,6 +9406,7 @@
     echo "$CMD1"
     cat "${te}0"
     cat "${te}1"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 #elif ! egrep "^export SOCAT_$SCM_ENVNAME=[\"']?$SCM_VALUE[\"']?\$" ${tf} >/dev/null; then
 #elif ! eval echo "$SOCAT_\$SCM_VALUE" |diff - "${tf}" >/dev/null; then
@@ -9194,6 +9416,8 @@
     echo "$CMD1"
     cat "${te}0"
     cat "${te}1"
+    cat "${tf}"
+    echo $(eval echo "\$SCM_VALUE")
     numFAIL=$((numFAIL+1))
 else
     $PRINTF "$OK\n"
@@ -9205,6 +9429,7 @@
 set +vx
 else # option is not supported
     $PRINTF "${YELLOW}$SCM_RECV not available${NORMAL}\n"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 fi # option is not supported
 fi ;; # NUMCOND, feats
@@ -9213,30 +9438,25 @@
 #
 done <<<"
 IP4  UDP4 127.0.0.1 PORT  ip-options=x01000000 ip-recvopts       IP_OPTIONS     user x01000000
-IP4  UDP4 127.0.0.1 PORT  ,                    so-timestamp      TIMESTAMP      user $(date '+%a %b %e %H:%M:.. %Y'), ...... usecs
+IP4  UDP4 127.0.0.1 PORT  ,                    so-timestamp      TIMESTAMP      user ... ... ..\\\? ..:..:.. ...., ...... usecs
 IP4  UDP4 127.0.0.1 PORT  ip-ttl=53            ip-recvttl        IP_TTL         user 53
 IP4  UDP4 127.0.0.1 PORT  ip-tos=7             ip-recvtos        IP_TOS         user 7
 IP4  UDP4 127.0.0.1 PORT  ,                    ip-pktinfo        IP_LOCADDR     user 127.0.0.1
-IP4  UDP4 127.0.0.1 PORT  ,                    ip-pktinfo        IP_DSTADDR     user 127.0.0.1
 IP4  UDP4 127.0.0.1 PORT  ,                    ip-pktinfo        IP_IF          user lo
-IP4  UDP4 127.0.0.1 PORT  ,                    ip-recvif         IP_IF          user lo0
-IP4  UDP4 127.0.0.1 PORT  ,                    ip-recvdstaddr    IP_DSTADDR     user 127.0.0.1
 IP4  IP4  127.0.0.1 PROTO ip-options=x01000000 ip-recvopts       IP_OPTIONS     root x01000000
-IP4  IP4  127.0.0.1 PROTO ,                    so-timestamp      TIMESTAMP      root $(date '+%a %b %e %H:%M:.. %Y'), ...... usecs
+IP4  IP4  127.0.0.1 PROTO ,                    so-timestamp      TIMESTAMP      root ... ... ..\\\? ..:..:.. ...., ...... usecs
 IP4  IP4  127.0.0.1 PROTO ip-ttl=53            ip-recvttl        IP_TTL         root 53
 IP4  IP4  127.0.0.1 PROTO ip-tos=7             ip-recvtos        IP_TOS         root 7
 IP4  IP4  127.0.0.1 PROTO ,                    ip-pktinfo        IP_LOCADDR     root 127.0.0.1
 IP4  IP4  127.0.0.1 PROTO ,                    ip-pktinfo        IP_DSTADDR     root 127.0.0.1
 IP4  IP4  127.0.0.1 PROTO ,                    ip-pktinfo        IP_IF          root lo
-IP4  IP4  127.0.0.1 PROTO ,                    ip-recvif         IP_IF          root lo0
-IP4  IP4  127.0.0.1 PROTO ,                    ip-recvdstaddr    IP_DSTADDR     root 127.0.0.1
 IP6  UDP6 [::1]     PORT  ,                    ipv6-recvpktinfo  IPV6_DSTADDR   user [[]0000:0000:0000:0000:0000:0000:0000:0001[]]
 IP6  UDP6 [::1]     PORT  ipv6-unicast-hops=35 ipv6-recvhoplimit IPV6_HOPLIMIT  user 35
-IP6  UDP6 [::1]     PORT  ipv6-tclass=0xaa     ipv6-recvtclass   IPV6_TCLASS    user xaa000000
+IP6  UDP6 [::1]     PORT  ipv6-tclass=0xaa     ipv6-recvtclass   IPV6_TCLASS    user 0xaa
 IP6  IP6  [::1]     PROTO ,                    ipv6-recvpktinfo  IPV6_DSTADDR   root [[]0000:0000:0000:0000:0000:0000:0000:0001[]]
 IP6  IP6  [::1]     PROTO ipv6-unicast-hops=35 ipv6-recvhoplimit IPV6_HOPLIMIT  root 35
-IP6  IP6  [::1]     PROTO ipv6-tclass=0xaa     ipv6-recvtclass   IPV6_TCLASS    root xaa000000
-#UNIX UNIX $td/test\$N.server - ,               so-timestamp      TIMESTAMP      user $(date '+%a %b %e %H:%M:.. %Y')
+IP6  IP6  [::1]     PROTO ipv6-tclass=0xaa     ipv6-recvtclass   IPV6_TCLASS    root 0xaa
+#UNIX UNIX $td/test\$N.server - ,               so-timestamp      TIMESTAMP      user $(date '+%a %b %e %H:..:.. %Y')
 "
 
 
@@ -9672,6 +9892,7 @@
 elif [ -z "$SECONDADDR" ]; then
     # we need access to more loopback addresses
     $PRINTF "test $F_n $TEST... ${YELLOW}need a second IPv4 address${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 ts1p=$(printf "%04x" $PORT);
@@ -9683,7 +9904,6 @@
 
 
 TIOCEXCL="$($PROCAN -c |grep "^#define[[:space:]]*TIOCEXCL[[:space:]]" |cut -d' ' -f3)"
-
 # test the generic ioctl-void option
 NAME=IOCTL_VOID
 case "$TESTS" in
@@ -9699,6 +9919,7 @@
 elif [ -z "$TIOCEXCL" ]; then
     # we use the numeric value of TIOCEXL which is system dependent
     $PRINTF "test $F_n $TEST... ${YELLOW}no value of TIOCEXCL${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tp="$td/test$N.pty"
@@ -9710,20 +9931,23 @@
 CMD1="$SOCAT $opts - file:$tp,ioctl-void=$TIOCEXCL,raw,echo=0"
 CMD2="$SOCAT $opts - file:$tp,raw,echo=0"
 printf "test $F_n $TEST... " $N
-$CMD0 >/dev/null 2>"${te}0" &
+su $TC_TEMP_USER -c "$CMD0 >/dev/null 2>${te}0" >/dev/null 2>/dev/null & 
 pid0=$!
 waitfile $tp 1
-(echo "$da"; sleep 2) |$CMD1 >"$tf" 2>"${te}1" &	# this should always work
+su $TC_TEMP_USER -c "(echo $da; sleep 2) | $CMD1 >$tf 2>${te}1" >/dev/null 2>/dev/null &	# this should always work
 pid1=$!
 usleep 1000000
-$CMD2 >/dev/null 2>"${te}2" </dev/null
+su $TC_TEMP_USER -c "$CMD2 >/dev/null 2>${te}2 </dev/null" >/dev/null 2>/dev/null 
 rc2=$?
 kill $pid0 $pid1 2>/dev/null; wait
 if ! echo "$da" |diff - "$tf" >/dev/null; then
     $PRINTF "${YELLOW}phase 1 failed${NORMAL}\n"
     echo "$CMD0 &"
+    cat  "${te}0"
     echo "$CMD1"
+    cat  "${te}1"
     echo "$da" |diff - "$tf"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $rc2 -eq 0 ]; then
     $PRINTF "$FAILED: $SOCAT:\n"
@@ -9764,6 +9988,7 @@
 elif [ -z "SO_REUSEADDR" ]; then
     # we use the numeric value of SO_REUSEADDR which might be system dependent
     $PRINTF "test $F_n $TEST... ${YELLOW}value of SO_REUSEADDR not known${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tp="$PORT"
@@ -9792,6 +10017,7 @@
     $PRINTF "${YELLOW}phase 1 failed${NORMAL}\n"
     echo "$CMD0 &"
     echo "$CMD1"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ $rc3 -ne 0 ]; then
     $PRINTF "$FAILED: $SOCAT:\n"
@@ -9804,6 +10030,7 @@
     echo "$CMD2 &"
     echo "$CMD3"
     echo "$da" |diff - "${tf}3"
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
     $PRINTF "$OK\n"
@@ -9825,11 +10052,13 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs sctp ip4 >/dev/null || ! runsip4 >/dev/null || ! runssctp4 "$((PORT-1))" >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}SCTP4 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ "$UNAME" = Linux ] && ! grep ^sctp /proc/modules >/dev/null; then
     # RHEL5 based systems became unusable when an sctp socket was created but
     # module sctp not loaded
     $PRINTF "test $F_n $TEST...${YELLOW}load sctp module!${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
@@ -9878,9 +10107,11 @@
 if ! eval $NUMCOND; then :;
 elif ! testaddrs sctp ip6 >/dev/null || ! runsip6 >/dev/null || ! runssctp6 "$((PORT-1))" >/dev/null; then
     $PRINTF "test $F_n $TEST... ${YELLOW}SCTP6 not available${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 elif [ "$UNAME" = Linux ] && ! grep ^sctp /proc/modules >/dev/null; then
     $PRINTF "test $F_n $TEST...${YELLOW}load sctp module!${NORMAL}\n" $N
+    $PRINTF "SKIP\n"
     numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
